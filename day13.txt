You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.


Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]





void rotateMatrix(List<List<int>> matrix) {
  int n = matrix.length;

  // Step 1: Transpose
  for (int i = 0; i < n; i++) {
    for (int j = i + 1; j < n; j++) {
      int temp = matrix[i][j];
      matrix[i][j] = matrix[j][i];
      matrix[j][i] = temp;
    }
  }

  // Step 2: Reverse each row
  for (int i = 0; i < n; i++) {
    int start = 0;
    int end = n - 1;
    while (start < end) {
      int temp = matrix[i][start];
      matrix[i][start] = matrix[i][end];
      matrix[i][end] = temp;
      start++;
      end--;
    }
  }
}

void main() {
  List<List<int>> matrix = [
    [1,  2,  3,  4],
    [5,  6,  7,  8],
    [9, 10, 11, 12],
    [13,14, 15, 16]
  ];

  print("Original:");
  matrix.forEach(print);

  rotateMatrix(matrix);

  print("\nRotated 90Â° Clockwise:");
  matrix.forEach(print);
}
